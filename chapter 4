---


---

<h2 id="표현식과-연산자">4. 표현식과 연산자</h2>
<p>표현식이란?  <strong>자바스크립트 인터프리터가 값(value)로 평가하는 자바스크립트 구문</strong></p>
<ul>
<li>간단한 표현식(기본표현식) : 임의의 상수, 변수에 할당된 임의의 값</li>
<li>복잡한 표현식(복합표현식) : 기본표현식이 결합된 표현식의 형태<br>
ex) 배열접근 표현식은  <code>[</code>(열린대괄호) + 숫자로 평가되는 표현식 +<code>]</code>(닫힌대괄호) 가 결합된 형태<br>
ex) 함수호출 표현식은 함수객체 + 인자표현식이 결합된 형태</li>
</ul>
<h3 id="기본-표현식">4-1. 기본 표현식</h3>
<p>가장 기본적인 형태로서 다른 표현식을 포함하지 않는 독립적 표현식.<br>
상수, 리터럴 값, 특정 키워드들, 변수 참조가 이에 해당한다.</p>
<ul>
<li>리터럴 : 고정된 문자열 자체</li>
</ul>
<pre class=" language-js"><code class="prism  language-js"><span class="token number">1.23</span> <span class="token comment">//숫자 리터럴</span>
<span class="token string">"hello"</span> <span class="token comment">//문자 리터럴</span>
<span class="token operator">/</span>pattern<span class="token operator">/</span> <span class="token comment">//정규표현식 리터럴</span>
</code></pre>
<ul>
<li>예약어</li>
</ul>
<pre class=" language-js"><code class="prism  language-js"><span class="token boolean">true</span> <span class="token comment">//불리언 true 값으로 평가</span>
<span class="token boolean">false</span> <span class="token comment">//불리언 false 값으로 평가</span>
<span class="token keyword">null</span> <span class="token comment">//null 값으로 평가</span>
<span class="token keyword">this</span> <span class="token comment">//'현재'객체로 평가</span>
</code></pre>
<ul>
<li>변수참조:<br>
자바스크립트에서는 프로그램 안에 존재하는 각 식별자들을 일단 변수라고 가정하고 값을 살펴본 뒤 해당 식별자를 이름으로 하는 변수가 없다면 해당 표현식을 undefined 라고 평가한다.</li>
</ul>
<pre class=" language-js"><code class="prism  language-js">i <span class="token comment">//변수 i 의 값으로 평가</span>
sum <span class="token comment">//변수 sum 의 값으로 평가</span>
undefined <span class="token comment">//전역변수, null 과 달리 키워드가 아니다.</span>
</code></pre>

